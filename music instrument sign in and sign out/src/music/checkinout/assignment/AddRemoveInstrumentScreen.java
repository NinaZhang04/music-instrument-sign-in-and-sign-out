
/*
 * Author: Core Inc (Kyle, Helen, Nina)
 * Class: ICS4U
 * Program: Add remove instrument screen
 * Description: Screen to add and remove instruments from the system
 */
package music.checkinout.assignment;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Color;

/**
 *
 * @author healt
 */
public class AddRemoveInstrumentScreen extends javax.swing.JPanel {

    /**
     * Creates new form AddRemoveInstrumentScreen
     */
    public AddRemoveInstrumentScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        idField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(239, 246, 224));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        jLabel1.setText("Add/Remove Instrument");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setText("Item Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("Instrument ID:");

        nameField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N

        idField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N

        addButton.setBackground(new java.awt.Color(18, 69, 89));
        addButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(18, 69, 89));
        removeButton.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        removeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        statusLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(458, 458, 458)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nameField)
                                .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(560, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 1272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(231, 231, 231)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(idField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(statusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // will first test if nameField and idField is empty
      
        if (!nameField.getText().equals("") && !idField.getText().equals("")) {
            int ID = -1;
            try {
                ID = Integer.parseInt(idField.getText());
            } catch (NumberFormatException ex) {
                statusLabel.setForeground(Color.red);
                statusLabel.setText("ID entered must be integer");
                return;
            }
            //load the instrument file
            Instrument[] instrumentList = Utilities.loadInstrumentFile(statusLabel);
            //check for pre-existing names / id
            for (int i = 0; i < instrumentList.length; i++) {
                if (instrumentList[i].getNumber() == ID) {
                    statusLabel.setForeground(Color.red);
                    statusLabel.setText("Instrument with same ID already exists");
                    return;
                }
                if (instrumentList[i].getName().equals(nameField.getText())) {
                    statusLabel.setForeground(Color.red);
                    statusLabel.setText("Instrument with same name already exists");
                    return;
                }
            }
            //if doesnt already exist, create a new instrument and write the info to file
            Instrument added = new Instrument();
            added.setName(nameField.getText());
            added.setNumber(ID);
            try {
                PrintWriter p = new PrintWriter(new FileWriter("instrumentList.txt", true));
                p.println(added.toString());
                statusLabel.setForeground(Color.green);
                statusLabel.setText("Instrument successfully added!");
                p.close();
            } catch (IOException ex) {
                statusLabel.setForeground(Color.red);
                statusLabel.setText("File has an exception.");
            }
        } else {
            statusLabel.setForeground(Color.red);
            statusLabel.setText("Missing information from fields");
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        //check if id field is empty
        if (!idField.getText().equals("")) {
            int ID = -1;
            try {
                ID = Integer.parseInt(idField.getText());
            } catch (NumberFormatException ex) {
                statusLabel.setForeground(Color.red);
                statusLabel.setText("ID entered must be integer");
                return;
            }
            //load instrument list file
            Instrument[] instrumentList = Utilities.loadInstrumentFile(statusLabel);
            boolean exist = false;
            //check if the id exists within the list
            for (int i = 0; i <= instrumentList.length - 1; i++) {
                if (instrumentList[i].getNumber() == ID) {
                    exist = true;
                    break;
                } else {
                    exist = false;
                }
            }
            //run remove if id exists
            if (exist == true) {
                Instrument[] tempList;
                //check if instrument is the final one in the list
                if (instrumentList.length == 1) {
                    if (instrumentList[0].getNumber() == ID) {
                        try {
                            PrintWriter pw = new PrintWriter(new File("instrumentList.txt"));
                            pw.print("");
                            pw.close();
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(AddRemoveInstrumentScreen.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    statusLabel.setForeground(Color.green);
                    statusLabel.setText("Instrument successfully removed!");
                    return;

                }
                //remove normally if not final instrument in list
                else {
                    tempList = new Instrument[instrumentList.length - 1];

                    int j = 0;
                    for (int i = 0; i <= instrumentList.length - 1; i++) {
                        if (instrumentList[i].getNumber() == ID) {
                            i++;
                        }
                        tempList[j] = instrumentList[i];
                        j++;
                        if (j == tempList.length) {
                            break;
                        }
                    }
                    Utilities.writeInstrumentFile(tempList, statusLabel);
                    statusLabel.setForeground(Color.green);
                    statusLabel.setText("Instrument successfully removed!");
                }
            } else {
                statusLabel.setForeground(Color.red);
                statusLabel.setText("ID does not exist");
            }
    }//GEN-LAST:event_removeButtonActionPerformed
        else{
            statusLabel.setForeground(Color.red);
            statusLabel.setText("ID must be entered to be removed");
        }   
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}

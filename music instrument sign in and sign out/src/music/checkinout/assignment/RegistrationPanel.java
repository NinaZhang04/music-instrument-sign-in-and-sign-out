
/*
 * Author: Core Inc (Kyle, Helen, Nina)
 * Class: ICS4U
 * Program: Registration panel
 * Description: Main panel to register teachers in the system
 */
package music.checkinout.assignment;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;

/**
 *
 * @author Helen
 */
public class RegistrationPanel extends javax.swing.JPanel {

    /**
     * Creates new form RegistrationPanel
     */
    public RegistrationPanel() {
        initComponents();
        // displays account requirements
        errorMessage.setText("The ID must be 9 digits and not start with 0, the password must be at least 5 characters including one numeric, one uppercase and one lowercase");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        UsernameField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        errorMessage = new javax.swing.JLabel();
        PasswordField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        LastNameField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ConfirmPasswordField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        FirstNameField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        CourseField = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(18, 69, 89));
        jPanel1.setForeground(new java.awt.Color(18, 69, 89));
        jPanel1.setMaximumSize(new java.awt.Dimension(1920, 1080));

        jPanel2.setBackground(new java.awt.Color(239, 246, 224));
        jPanel2.setFont(new java.awt.Font("Lucida Grande", 0, 10)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 50)); // NOI18N
        jLabel2.setText("Registration");

        UsernameField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        UsernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameFieldActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("Teacher ID:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setText("Password:");

        errorMessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        PasswordField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel5.setText("Last Name:");

        LastNameField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        LastNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastNameFieldActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setText("Confirm Password: ");

        ConfirmPasswordField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        ConfirmPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmPasswordFieldActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setText("First Name: ");

        FirstNameField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        FirstNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNameFieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel8.setText("Course: ");

        CourseField.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        CourseField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 1346, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ConfirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CourseField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(errorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ConfirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(FirstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(LastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CourseField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(82, Short.MAX_VALUE))
        );

        registerButton.setBackground(new java.awt.Color(239, 246, 224));
        registerButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        registerButton.setForeground(new java.awt.Color(18, 69, 89));
        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(registerButton)
                .addGap(106, 106, 106))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UsernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameFieldActionPerformed

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordFieldActionPerformed

    private void LastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LastNameFieldActionPerformed

    private void ConfirmPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmPasswordFieldActionPerformed

    private void FirstNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstNameFieldActionPerformed

    private void CourseFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CourseFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CourseFieldActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        // TODO add your handling code here:
        //gets the text from the username from the textfield
        int u = -1;
        // try catch block to prevent code from breaking with strings/non numeric characters
        try {
            u = Integer.parseInt(UsernameField.getText());
        } catch (NumberFormatException exception) {
            // Output expected NumberFormatException.
            errorMessage.setText("Make sure to enter a valid ID!");
        }
        // gets the rest of the information from the text field and stores in variables
        String p = PasswordField.getText();
        String cp = ConfirmPasswordField.getText();
        String fn = FirstNameField.getText();
        String ln = LastNameField.getText();
        String c = CourseField.getText();

        // declares and intializes a scanner
        Scanner input = null;
        // declare file that stores all of the teacher info once registered
        File teacherFile = new File("teacherInfo.txt");

        // declares boolean to track if the username is a duplicate
        boolean duplicate = false;

        // try catch block
        try {
            // initializes a scanner to scan the file with user info
            input = new Scanner(teacherFile);
            // loops through everything in the file
            while (input.hasNextLine()) {
                // creates a String array to store the user info
                String[] teachers = input.nextLine().split(",");
                if(teachers.length > 0) {
                    // checks if the usernames match up -> no need for another try catch since all previous IDs have been checked
                    if(u == Integer.parseInt(teachers[0])){
                        // marks the name as a duplicate
                        duplicate = true;
                    }
                } 
            }
        }
        // catches IOException
        catch (IOException e){
            // prints error message if the file can not be found
            errorMessage.setText("There's an IOException! Make sure to check that the file exists!");
        }

        // initializes booleans that track if the username/password meets conditions
        boolean goodPW = checkPassword(p);
        boolean goodUser = checkUsername(u);

        // checks if any of the conditions are broken
        if(!goodPW){
            // sets jlabel to the error message to say the password is bad
            errorMessage.setText("This is a bad password, make sure it meets the conditions!");
        }
        // checks if the username is too short
        else if (!goodUser){
            // sets jlabel to the error message to say the username is bad
            errorMessage.setText("This is a bad teacherID, make sure it is a 9 digit integer!");
        }
        // checks if the username is a duplicate
        else if (duplicate){
            // sets jlabel to the error message to say the username is a duplicate
            errorMessage.setText("This ID is already taken, choose another!");
        }
        // checks if the passwords don't match
        else if(!p.equals(cp)){
            // sets jLabel to show that the passwords entered don't match
            errorMessage.setText("the passwords don't match!");
        }
        // none of the conditions are broken
        else {
            // a teahcer is created
            Teacher temp = new Teacher(u, p, fn, ln, c);
            // print the teacher to file
            printTeacher(temp);
            // sets jlabel to say the account has been
            errorMessage.setText("Your account has be set up!");
        }
        // closes the scanner
        input.close();

    }//GEN-LAST:event_registerButtonActionPerformed

    /**
     * method to print a teacher to a file
     * @param t - a teacher to print
     */
    public void printTeacher(Teacher t){
        // declares the print writer
        PrintWriter output = null;
        
        // declares and initializes the file to write to (teacherInfo.txt)
        File f = new File("teacherInfo.txt");
        
        // try catch block for the print writer
        try {
            // initializes the PrintWriter -> appends text instead of overwriting (you want to keep the previous data)
            output = new PrintWriter(new FileWriter(f, true));
            
        } 
        // catches IOExceptions
        catch (IOException ex) {
            // display error message if exceptions are caught
            errorMessage.setText("I/O error, try again!");
        }
        
        // prints the information onto a delimited file
        output.println(t.toString());
        // closes the print writer
        output.close();
    }
    
    /**
     * checks if a password meets the conditions
     * @param p is the password to be checked
     * @return true if the password is good and meets conditions
     */
    public boolean checkPassword (String p) {
        // the parameters is the password must be five or more characters and have an uppercase, lowercase and number
        
        // declares boolean to track if there is an uppercase, lowercase and number
        boolean uppercase = false;
        boolean lowercase = false;
        boolean number = false;
        
        // loops through the characters in the password 
        for(int i = 0; i < p.length(); i++){
            // checks if it's a number using ASCII values
            if(p.charAt(i) >= 48 && p.charAt(i) <= 57){
                // marks number as true
                number = true;
            }
            // checks if it's an uppercase letter using ASCII values
            else if(p.charAt(i) >= 65 && p.charAt(i) <= 90){
                // marks the uppercase boolean as true
                uppercase = true;
            }
            // checks if it's a lowercase value using ASCII values
            else if(p.charAt(i) >= 97 && p.charAt(i) <= 122){
                // marks the lowercase boolean as true
                lowercase = true;
            }
        }
        // if the conditions are met, return true
        if(lowercase && uppercase && number && p.length() >= 5) {
            return true;
        }
        // if one of the conditions aren't met it'll return false
        return false;
    }
    
    /**
     * checks if the username meets conditions (must be 9 digits) - 0 at start does not count
     * @param u the username to be checked
     * @return true if the username is valid
     */
    public boolean checkUsername(int u) {
        // checks if the teacherID is 9 digits
        String user = String.valueOf(u);
        return user.length() == 9;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ConfirmPasswordField;
    private javax.swing.JTextField CourseField;
    private javax.swing.JTextField FirstNameField;
    private javax.swing.JTextField LastNameField;
    private javax.swing.JTextField PasswordField;
    private javax.swing.JTextField UsernameField;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton registerButton;
    // End of variables declaration//GEN-END:variables
}
